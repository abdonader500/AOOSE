/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package aoose_main.gui;

import aoose_main.entities.actors.Pharmacist;
import aoose_main.enums.Shifts;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import static com.mongodb.client.model.Filters.eq;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.bson.Document;

/**
 *
 * @author Abdo Nader
 */
public class login extends javax.swing.JPanel {
    private JFrame parentFrame;
    private MongoDatabase  database;

    /**
     * Creates new form NewJPanel
     */
public login(MongoDatabase database, JFrame parentFrame) {
    this.database = database; // Assign the database instance
    this.parentFrame = parentFrame; // Assign the parent frame
    initComponents();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Inventory Clerk", "Insurance Provider", "Supplier", "Cashier", "Pharmacist", "Admin" }));

        jLabel1.setText("login page");

        jButton1.setText("login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("email");

        jLabel3.setText("password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 137, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(162, 162, 162))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(jPasswordField1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String email = jTextField1.getText();
    String password = new String(jPasswordField1.getPassword());
    String userType = (String) jComboBox1.getSelectedItem();

    // Validate input
    if (email.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Email and password cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Get MongoDB collection
        String collectionName = userType.toLowerCase().replace(" ", "_") + "s";
        System.out.println("Using collection: " + collectionName);
        MongoCollection<Document> collection = database.getCollection(collectionName);

        // Query the database
        Document user = collection.find(eq("email", email)).first();
        System.out.println("User found: " + (user != null ? user.toJson() : "No user found"));

        if (user != null && user.getString("password").equals(password)) {
            JOptionPane.showMessageDialog(this, "Login successful!", "Success", JOptionPane.INFORMATION_MESSAGE);

            // Close the login window
            parentFrame.dispose();

            // Redirect to appropriate dashboard
            switch (userType) {
case "Admin" -> {
        System.out.println("Opening Admin Dashboard...");
        JFrame dashboardFrame = new JFrame("Admin Dashboard");
        dashboardFrame.setContentPane(new AdminDashboard());
        dashboardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dashboardFrame.pack();
        dashboardFrame.setVisible(true);
    }
    case "Patient" -> {
        System.out.println("Opening Patient Dashboard...");
JFrame frame = new JFrame("Patient Dashboard");
                    int loggedInPatientId = user.getInteger("id");
frame.setContentPane(new PatientDashboard(database, loggedInPatientId));
frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
frame.pack();
frame.setVisible(true);

    }

case "Pharmacist" -> {
    System.out.println("Opening Pharmacist Dashboard...");
    int pharmacistID = user.getInteger("id");

    JFrame dashboardFrame = new JFrame("Pharmacist Dashboard");
    dashboardFrame.setContentPane(new PharmacistDashboard(database, pharmacistID)); // Pass only the ID
    dashboardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    dashboardFrame.pack();
    dashboardFrame.setVisible(true);
}
case "Cashier" -> {
    System.out.println("Opening Cashier Dashboard...");
    int cashierID = user.getInteger("id");

    JFrame dashboardFrame = new JFrame("Cashier Dashboard");
    dashboardFrame.setContentPane(new CashierDashboard(database, cashierID)); // Pass only the ID
    dashboardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    dashboardFrame.pack();
    dashboardFrame.setVisible(true);
}
case "Supplier" -> {
    System.out.println("Opening Supplier Dashboard...");
    JFrame dashboardFrame = new JFrame("Supplier Dashboard");
                    int loggedInSupplierId = user.getInteger("id");
    dashboardFrame.setContentPane(new SupplierDashboard(database, loggedInSupplierId)); // Pass supplier ID
    dashboardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    dashboardFrame.pack();
    dashboardFrame.setVisible(true);
}


                case "Insurance Provider" -> {
                    System.out.println("Opening Insurance Provider Dashboard...");
                    JFrame dashboardFrame = new JFrame("Insurance Provider Dashboard");
                      int userId = user.getInteger("id");
                    dashboardFrame.setContentPane(new InsuranceProviderDashboard(database, userId)); // Pass userId
                    dashboardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    dashboardFrame.pack();
                    dashboardFrame.setVisible(true);
                }
    default -> JOptionPane.showMessageDialog(this, "Invalid user type!", "Error", JOptionPane.ERROR_MESSAGE);
}

        } else {
            JOptionPane.showMessageDialog(this, "Invalid email or password!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "An error occurred during login!", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
